/********************************************************************
	author:			Abhinav Choudhary
	filename: 		Controller.h
	description:	Simple Controller. All other controllers are derived from this.
*********************************************************************/
#pragma once
#include "Hero.h"

namespace ACN
{
	class Controller:public BaseWorldItem
	{
	public:
		//////////////////////////////////////////////////////////////////////////
		///Initializers & Constructor/Destructor
		//////////////////////////////////////////////////////////////////////////
		
		Controller();
		virtual ~Controller();

		//////////////////////////////////////////////////////////////////////////
		///Frame Updates
		//////////////////////////////////////////////////////////////////////////
		
		virtual void UpdateInput();
		virtual void UpdateSimulation( float deltaTime );
		virtual void UpdateDisplay();

		//////////////////////////////////////////////////////////////////////////
		///Accessors
		//////////////////////////////////////////////////////////////////////////
		
		inline Color GetTeamColor() const;
		inline int GetControllerID() const;
		float GetAverageLevel();
		inline GameMap* GetPtrToGameMap() { return m_ptrToGameMap; }

		//////////////////////////////////////////////////////////////////////////
		///Mutators
		//////////////////////////////////////////////////////////////////////////

		void AddHero( const CharacterInfo& charInfo, const Vec3& worldPos, float baseLvl );
		void SetTeamColor(Color val);
		inline void SetControllerID(int val);
		inline void SetPtrToGameMap( GameMap* val) { m_ptrToGameMap = val; }
		void ResetController();
		
		//////////////////////////////////////////////////////////////////////////
		///Public Functions
		//////////////////////////////////////////////////////////////////////////
		
		virtual void StartTurn();
		virtual void EndCurrentTurn();

		//////////////////////////////////////////////////////////////////////////
		///Events
		//////////////////////////////////////////////////////////////////////////
	
		void HeroTurnEnd( NamedProperties& params );
		virtual void BeginTurnForHero( Hero* ptrToHero );

	protected:
		//////////////////////////////////////////////////////////////////////////
		///Data
		//////////////////////////////////////////////////////////////////////////
		Color m_TeamColor;
		std::vector< Hero* > m_vecOfHeroes;		
	
		bool m_isControllersTurn;
		int m_heroTurnNumber;

		//Unique id
		int m_controllerID;

		//Ptr To GameMap
		GameMap* m_ptrToGameMap;		
	};

	//////////////////////////////////////////////////////////////////////////
	///Inline Definitions
	//////////////////////////////////////////////////////////////////////////

	Color Controller::GetTeamColor() const
	{
		return m_TeamColor;
	}
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	int Controller::GetControllerID() const
	{
		return m_controllerID;
	}
	//////////////////////////////////////////////////////////////////////////

	//////////////////////////////////////////////////////////////////////////
	void Controller::SetControllerID( int val )
	{
		m_controllerID = val;
	}
}